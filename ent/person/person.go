// Code generated by ent, DO NOT EDIT.

package person

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the person type in the database.
	Label = "person"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFirstName holds the string denoting the firstname field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the lastname field in the database.
	FieldLastName = "last_name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldSalary holds the string denoting the salary field in the database.
	FieldSalary = "salary"
	// FieldBirthDate holds the string denoting the birthdate field in the database.
	FieldBirthDate = "birth_date"
	// Table holds the table name of the person in the database.
	Table = "persons"
)

// Columns holds all SQL columns for person fields.
var Columns = []string{
	FieldID,
	FieldFirstName,
	FieldLastName,
	FieldEmail,
	FieldSalary,
	FieldBirthDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Order defines the ordering method for the Person queries.
type Order func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFirstName orders the results by the firstName field.
func ByFirstName(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldFirstName, opts...).ToFunc()
}

// ByLastName orders the results by the lastName field.
func ByLastName(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldLastName, opts...).ToFunc()
}

// ByEmail orders the results by the email field.
func ByEmail(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldEmail, opts...).ToFunc()
}

// BySalary orders the results by the salary field.
func BySalary(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldSalary, opts...).ToFunc()
}

// ByBirthDate orders the results by the birthDate field.
func ByBirthDate(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldBirthDate, opts...).ToFunc()
}
